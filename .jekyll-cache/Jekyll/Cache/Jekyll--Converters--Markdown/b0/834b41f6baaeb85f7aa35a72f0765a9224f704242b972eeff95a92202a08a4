I"Q<p>A linked list is a linear collection of data elements whose order isnâ€™t given by their physical placement in memory; instead, each element <strong>points</strong> to the next. The benefit of this is that linked lists can store a (hypothetically) indefinite amount of data - as long as your computer has enough memory. This differs from arrays because arrays use contiguous storage. It is a data structure consisting of a collection of nodes which together represents a sequence. In its most basic form, each node contains just two things: <strong>data</strong> and a <strong>reference</strong>.</p>

<h2 id="variations">Variations</h2>
<h3 id="singly-linked-list">Singly-linked list</h3>
<p>In a singly-linked list each node stores some data and a pointer to the next node.
In its simplest form, it can be implemented as follows:</p>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">struct</span> <span class="nc">Node</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">data</span><span class="p">;</span>
    <span class="n">Node</span><span class="o">*</span> <span class="n">next</span><span class="p">;</span>
    <span class="n">Node</span> <span class="p">(</span><span class="kt">int</span> <span class="n">data</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">this</span> <span class="o">-&gt;</span> <span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="p">;</span>
        <span class="k">this</span> <span class="o">-&gt;</span> <span class="n">next</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="k">class</span> <span class="nc">SinglyLinkedList</span> <span class="p">{</span>
<span class="nl">private:</span>
    <span class="n">Node</span> <span class="o">*</span><span class="n">head</span><span class="p">,</span> <span class="o">*</span><span class="n">tail</span><span class="p">;</span>
<span class="nl">public:</span>
    <span class="n">SinglyLinkedList</span> <span class="p">()</span> <span class="p">{</span> <span class="c1">// construct an empty list</span>
        <span class="n">head</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
        <span class="n">tail</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
    <span class="p">}</span>
   
    <span class="kt">void</span> <span class="n">add</span> <span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">)</span> <span class="p">{</span>  <span class="c1">// this should add an item to the end of the linked list</span>
        <span class="n">Node</span> <span class="o">*</span><span class="n">n</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Node</span><span class="p">(</span><span class="n">x</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">head</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">head</span> <span class="o">=</span> <span class="n">n</span><span class="p">;</span>
            <span class="n">tail</span> <span class="o">=</span> <span class="n">n</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="p">{</span>
            <span class="n">Node</span> <span class="o">*</span><span class="n">n</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Node</span><span class="p">(</span><span class="n">x</span><span class="p">);</span>
            <span class="n">tail</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">=</span> <span class="n">n</span><span class="p">;</span>
            <span class="n">tail</span> <span class="o">=</span> <span class="n">n</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>  
<span class="p">};</span>
</code></pre></div></div>
<p>We can additionally add some useful functions to</p>

<h3 id="doubly-linked-list">Doubly-linked list</h3>
<p>In a doubly-linked list each node contains some data, and points to the next and previous nodes.</p>

<h3 id="applications">Applications</h3>
:ET